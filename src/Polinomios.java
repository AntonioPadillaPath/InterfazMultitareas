/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Antonio
 */
import javax.swing.JOptionPane;

public class Polinomios extends javax.swing.JFrame {

    /**
     * Creates new form Polinomios
     */
    public Polinomios() {
        super("Polinomios");
        initComponents();
        
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        grado = new javax.swing.JTextField();
        coeficientes = new javax.swing.JButton();
        texto = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Polinomio = new javax.swing.JTextArea();
        borrar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 51, 0));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 8, true));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Ingresa un el grado de la ecuación a construir:");

        grado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        grado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                gradoKeyTyped(evt);
            }
        });

        coeficientes.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        coeficientes.setText("Ingresar los coeficientes de la ecuación");
        coeficientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coeficientesActionPerformed(evt);
            }
        });

        texto.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        texto.setForeground(new java.awt.Color(255, 255, 255));
        texto.setText("El polinomio se mostrará en el siguiente panel:");

        Polinomio.setEditable(false);
        Polinomio.setColumns(20);
        Polinomio.setRows(5);
        Polinomio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Polinomio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PolinomioKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(Polinomio);

        borrar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        borrar.setText("Borrar Polinomio");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 0));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jButton3.setText("?");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(coeficientes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(borrar))
                            .addComponent(texto)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(grado, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(grado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(coeficientes)
                    .addComponent(borrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(texto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void coeficientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coeficientesActionPerformed
        
        try{
            
        int i;
        int n;
        
        n = Integer.parseInt(this.grado.getText());
        
        Polinomio.setText("");
        
        int ecuacion[] = new int [n + 1];
        
        JOptionPane.showMessageDialog(null, "Ahora ingresa los coeficientes de las variables", "POLINOMIO", JOptionPane.QUESTION_MESSAGE);
        
        for(i = n; i >= 0; i--)
        {
            ecuacion[i] = Integer.parseInt(JOptionPane.showInputDialog(null, "X^" +i, "POLINOMIO", JOptionPane.QUESTION_MESSAGE));
        }
        
        for(i = n; i >= 0; i--)
        {
            
            if(ecuacion[i] == 0)
            {
                Polinomio.append(String.valueOf(""));
            }
            
            else
            {
                if(i == n)
                {
                    if(ecuacion[i] == 1)
                    {
                        Polinomio.append(String.valueOf(""));
                        Polinomio.append(String.valueOf("x^" +i));
                    }
                    else if(ecuacion[i] > 1)
                    {
                        Polinomio.append(String.valueOf(""));
                        Polinomio.append(String.valueOf(ecuacion[i] + "x^" +i));
                    }
                    else
                    {
                        Polinomio.append(String.valueOf(" - "));
                        Polinomio.append(String.valueOf((ecuacion[i] * (-1))+ "x^" +i));
                    }
                    
                }
                
                else if (i == 1)
                {
                    
                    if(ecuacion[i] == 1)
                    {
                        Polinomio.append(String.valueOf(" + "));
                        Polinomio.append(String.valueOf("x"));
                    }
                    else if(ecuacion[i] > 1)
                    {
                        Polinomio.append(String.valueOf(" + "));
                        Polinomio.append(String.valueOf(ecuacion[i]+ "x"));
                    }
                    else
                    {
                        Polinomio.append(String.valueOf(" - "));
                        Polinomio.append(String.valueOf("x"));
                    }
                }
                
                else if (i == 0)
                    {
                        if(ecuacion[i] == 1)
                        {
                            Polinomio.append(String.valueOf(" + "));
                            Polinomio.append(String.valueOf(ecuacion[i]));
                        }
                        else if(ecuacion[i] > 1)
                        {
                            Polinomio.append(String.valueOf(" + "));
                            Polinomio.append(String.valueOf(ecuacion[i]));
                        }
                        else
                        {
                            Polinomio.append(String.valueOf(" - "));
                            Polinomio.append(String.valueOf(ecuacion[i] * (-1)));
                        }
                         
                    }
                
                else
                {
                    if(ecuacion[i] == 1)
                    {
                        Polinomio.append(String.valueOf(" + "));
                        Polinomio.append(String.valueOf("x^" +i));  
                    }
                    else if(ecuacion[i] > 1)
                    {
                        Polinomio.append(String.valueOf(" + "));
                        Polinomio.append(String.valueOf(ecuacion[i]+ "x^" +i));
                    }
                    else
                    {
                        Polinomio.append(String.valueOf(" - "));
                        Polinomio.append(String.valueOf((ecuacion[i] * (-1))+ "x^" +i));
                    }
                }
            }
            
        }
        
        texto.setText("El polinomio contruido es el siguiente:");
        
  
        
        }catch (Exception e) {JOptionPane.showMessageDialog(null, "Introduzca el tipo de dato solicitado", "Error", JOptionPane.ERROR_MESSAGE);}
    }//GEN-LAST:event_coeficientesActionPerformed

    private void gradoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gradoKeyTyped
        
        char grado = evt.getKeyChar();
        
        if(Character.isLetter(grado))
        {
            getToolkit().beep();
            evt.consume();
            coeficientes.setEnabled(false);
        }
        
        else
        {
            coeficientes.setEnabled(true);
        }
        
    }//GEN-LAST:event_gradoKeyTyped

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        
        texto.setText("");
        Polinomio.setText("");
        
        
        
    }//GEN-LAST:event_borrarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        AyudaPoli ayudapoli = new AyudaPoli();
        ayudapoli.setVisible(true);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void PolinomioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PolinomioKeyTyped

        
    }//GEN-LAST:event_PolinomioKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Polinomios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Polinomios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Polinomios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Polinomios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Polinomios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Polinomio;
    private javax.swing.JButton borrar;
    private javax.swing.JButton coeficientes;
    private javax.swing.JTextField grado;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel texto;
    // End of variables declaration//GEN-END:variables

}
